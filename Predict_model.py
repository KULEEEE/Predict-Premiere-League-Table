# -*- coding: utf-8 -*-
"""FinaltermProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/126KysytrrKkm4Ck_QaN1gzchIcaxHzlU
"""

from google.colab import drive
drive.mount('/content/drive')

"""#Data Analyze"""

import pandas as pd
import numpy as np
locate = "/Dataset/"
trainset = pd.read_csv(locate+"trainset.csv")
trainset

corr_matrix = trainset.corr()
corr_matrix["FTHG"].sort_values()

corr_matrix["FTAG"].sort_values()

from pandas.plotting import scatter_matrix
attributes = ["FTHG","HC","HF","HST"]
scatter_matrix(trainset[attributes],figsize=(15,15))



"""#Player stat standardization"""

locate_2011 = "/Dataset/Player_dataset/2011/"
locate_2012 = "/Dataset/Player_dataset/2012/"
locate_2013 = "/Dataset/Player_dataset/2013/"
locate_2014 = "/Dataset/Player_dataset/2014/"
locate_2015 = "/Dataset/Player_dataset/2015/"
locate_2016 = "/Dataset/Player_dataset/2016/"
locate_2017 = "/Dataset/Player_dataset/2017/"
locate_2018 = "/Dataset/Player_dataset/2018/"
locate_2019 = "/Dataset/Player_dataset/2019/"
locate_2020 = "/Dataset/Player_dataset/2020/"

#2011
Arsenal_2011 = pd.read_excel(locate_2011+"Arsenal_2011.xlsx")
AstonVilla_2011 = pd.read_excel(locate_2011+"AstonVilla_2011.xlsx")
Birminghamcity_2011 = pd.read_excel(locate_2011+"Birminghamcity_2011.xlsx")
BlackburnRovers_2011 = pd.read_excel(locate_2011+"BlackburnRovers_2011.xlsx")
Blackpool_2011 = pd.read_excel(locate_2011+"Blackpool_2011.xlsx")
BoltonWanderers_2011 = pd.read_excel(locate_2011+"BoltonWanderers_2011.xlsx")
Chelsea_2011 = pd.read_excel(locate_2011+"Chelsea_2011.xlsx")
Everton_2011 = pd.read_excel(locate_2011+"Everton_2011.xlsx")
Fulham_2011 = pd.read_excel(locate_2011+"Fulham_2011.xlsx")
Liverpool_2011 = pd.read_excel(locate_2011+"Liverpool_2011.xlsx")
Manchestercity_2011 = pd.read_excel(locate_2011+"Manchestercity_2011.xlsx")
Manchesterunited_2011 = pd.read_excel(locate_2011+"Manchesterunited_2011.xlsx")
Newcastle_2011 = pd.read_excel(locate_2011+"Newcastle_2011.xlsx")
Stokecity_2011 = pd.read_excel(locate_2011+"Stokecity_2011.xlsx")
Sunderland_2011 = pd.read_excel(locate_2011+"Sunderland_2011.xlsx")
Tottenham_2011 = pd.read_excel(locate_2011+"Tottenham_2011.xlsx")
WestBromwichAlbion_20111 = pd.read_excel(locate_2011+"WestBromwichAlbion_2011.xlsx")
Westham_2011 = pd.read_excel(locate_2011+"Westham_2011.xlsx")
WiganAthletic_2011 = pd.read_excel(locate_2011+"WiganAthletic_2011.xlsx")
WolverhamptonWanderers_2011 = pd.read_excel(locate_2011+"WolverhamptonWanderers_2011.xlsx")

#2012
Arsenal_2012 = pd.read_excel(locate_2012+"Arsenal_2012.xlsx")
AstonVilla_2012 = pd.read_excel(locate_2012+"AstonVilla_2012.xlsx")
BlackburnRovers_2012 = pd.read_excel(locate_2012+"BlackburnRovers_2012.xlsx")
BoltonWanderers_2012 = pd.read_excel(locate_2012+"BoltonWanderers_2012.xlsx")
Chelsea_2012 = pd.read_excel(locate_2012+"Chelsea_2012.xlsx")
Everton_2012 = pd.read_excel(locate_2012+"Everton_2012.xlsx")
Fulham_2012 = pd.read_excel(locate_2012+"Fulham_2012.xlsx")
Liverpool_2012 = pd.read_excel(locate_2012+"Liverpool_2012.xlsx")
Manchestercity_2012 = pd.read_excel(locate_2012+"Manchestercity_2012.xlsx")
Manchesterunited_2012 = pd.read_excel(locate_2012+"Manchesterunited_2012.xlsx")
Newcastle_2012 = pd.read_excel(locate_2012+"Newcastle_2012.xlsx")
Norich_2012 = pd.read_excel(locate_2012+"Norich_2012.xlsx")
QPR_2012 = pd.read_excel(locate_2012+"QPR_2012.xlsx")
Stokecity_2012 = pd.read_excel(locate_2012+"Stokecity_2012.xlsx")
Sunderland_2012 = pd.read_excel(locate_2012+"Sunderland_2012.xlsx")
Swanseacity_2012 = pd.read_excel(locate_2012+"Swanseacity_2012.xlsx")
Tottenham_2012 = pd.read_excel(locate_2012+"Tottenham_2012.xlsx")
WestBromwichAlbion_2012 = pd.read_excel(locate_2012+"WestBromwichAlbion_2012.xlsx")
WiganAthletic_2012 = pd.read_excel(locate_2012+"WiganAthletic_2012.xlsx")
WolverhamptonWanderers_2012 = pd.read_excel(locate_2012+"WolverhamptonWanderers_2012.xlsx")

#2013
Arsenal_2013 = pd.read_excel(locate_2013+"Arsenal_2013.xlsx")
AstonVilla_2013 = pd.read_excel(locate_2013+"AstonVilla_2013.xlsx")
Chelsea_2013 = pd.read_excel(locate_2013+"Chelsea_2013.xlsx")
Everton_2013 = pd.read_excel(locate_2013+"Everton_2013.xlsx")
Fulham_2013 = pd.read_excel(locate_2013+"Fulham_2013.xlsx")
Liverpool_2013 = pd.read_excel(locate_2013+"Liverpool_2013.xlsx")
Manchestercity_2013 = pd.read_excel(locate_2013+"Manchestercity_2013.xlsx")
Manchesterunited_2013 = pd.read_excel(locate_2013+"Manchesterunited_2013.xlsx")
Newcastle_2013 = pd.read_excel(locate_2013+"Newcastle_2013.xlsx")
Norich_2013 = pd.read_excel(locate_2013+"Norich_2013.xlsx")
QPR_2013 = pd.read_excel(locate_2013+"QPR_2013.xlsx")
Reading_2013 = pd.read_excel(locate_2013+"Reading_2013.xlsx")
Southhampton_2013 = pd.read_excel(locate_2013+"Southhampton_2013.xlsx")
Stokecity_2013 = pd.read_excel(locate_2013+"Stokecity_2013.xlsx")
Sunderland_2013 = pd.read_excel(locate_2013+"Sunderland_2013.xlsx")
Swanseacity_2013 = pd.read_excel(locate_2013+"Swanseacity_2013.xlsx")
Tottenham_2013 = pd.read_excel(locate_2013+"Tottenham_2013.xlsx")
WestBromwichAlbion_2013 = pd.read_excel(locate_2013+"WestBromwichAlbion_2013.xlsx")
Westham_2013 = pd.read_excel(locate_2013+"Westham_2013.xlsx")
Wigan_2013 = pd.read_excel(locate_2013+"Wigan_2013.xlsx")

#2014
Arsenal_2014 = pd.read_excel(locate_2014+"Arsenal_2014.xlsx")
AstonVilla_2014 = pd.read_excel(locate_2014+"AstonVilla_2014.xlsx")
Cardifcity_2014 = pd.read_excel(locate_2014+"Cardifcity_2014.xlsx")
Chelsea_2014 = pd.read_excel(locate_2014+"Chelsea_2014.xlsx")
Crystalpalace_2014 = pd.read_excel(locate_2014+"Crystalpalace_2014.xlsx")
Everton_2014 = pd.read_excel(locate_2014+"Everton_2014.xlsx")
Fulham_2014 = pd.read_excel(locate_2014+"Fulham_2014.xlsx")
Hullcity_2014 = pd.read_excel(locate_2014+"Hullcity_2014.xlsx")
Liverpool_2014 = pd.read_excel(locate_2014+"Liverpool_2014.xlsx")
Manchestercity_2014 = pd.read_excel(locate_2014+"Manchestercity_2014.xlsx")
Manchesterunited_2014 = pd.read_excel(locate_2013+"Manchesterunited_2013.xlsx")
Newcastle_2014 = pd.read_excel(locate_2014+"Newcastle_2014.xlsx")
Norich_2014 = pd.read_excel(locate_2014+"Norich_2014.xlsx")
Southhampton_2014 = pd.read_excel(locate_2014+"Southhampton_2014.xlsx")
Stokecity_2014 = pd.read_excel(locate_2014+"Stokecity_2014.xlsx")
Sunderland_2014 = pd.read_excel(locate_2014+"Sunderland_2014.xlsx")
Swanseacity_2014 = pd.read_excel(locate_2014+"Swanseacity_2014.xlsx")
Tottenham_2014 = pd.read_excel(locate_2014+"Tottenham_2014.xlsx")
WestBromwichAlbion_2014 = pd.read_excel(locate_2014+"WestBromwichAlbion_2014.xlsx")
Westham_2014 = pd.read_excel(locate_2014+"Westham_2014.xlsx")

#2015
Arsenal_2015 = pd.read_excel(locate_2015+"Arsenal_2015.xlsx")
AstonVilla_2015 = pd.read_excel(locate_2015+"AstonVilla_2015.xlsx")
Burnley_2015 = pd.read_excel(locate_2015+"Burnley_2015.xlsx")
Chelsea_2015 = pd.read_excel(locate_2015+"Chelsea_2015.xlsx")
Crystalpalace_2015 = pd.read_excel(locate_2015+"Crystalpalace_2015.xlsx")
Everton_2015 = pd.read_excel(locate_2015+"Everton_2015.xlsx")
Hullcity_2015 = pd.read_excel(locate_2015+"Hullcity_2015.xlsx")
LeicesterCity_2015 = pd.read_excel(locate_2015+"LeicesterCity_2015.xlsx")
Liverpool_2015 = pd.read_excel(locate_2015+"Liverpool_2015.xlsx")
Manchestercity_2015 = pd.read_excel(locate_2015+"Manchestercity_2015.xlsx")
Manchesterunited_2015 = pd.read_excel(locate_2015+"Manchesterunited_2015.xlsx")
Newcastle_2015 = pd.read_excel(locate_2015+"Newcastle_2015.xlsx")
QPR_2015 = pd.read_excel(locate_2015+"QPR_2015.xlsx")
Southhampton_2015 = pd.read_excel(locate_2015+"Southhampton_2015.xlsx")
Stokecity_2015 = pd.read_excel(locate_2015+"Stokecity_2015.xlsx")
Sunderland_2015 = pd.read_excel(locate_2015+"Sunderland_2015.xlsx")
Swanseacity_2015 = pd.read_excel(locate_2015+"Swanseacity_2015.xlsx")
Tottenham_2015 = pd.read_excel(locate_2015+"Tottenham_2015.xlsx")
WestBromwichAlbion_2015 = pd.read_excel(locate_2015+"WestBromwichAlbion_2015.xlsx")
Westham_2015 = pd.read_excel(locate_2015+"Westham_2015.xlsx")

#2016
Arsenal_2016 = pd.read_excel(locate_2016+"Arsenal_2016.xlsx")
AstonVilla_2016 = pd.read_excel(locate_2016+"AstonVilla_2016.xlsx")
Bournemouth_2016 = pd.read_excel(locate_2016+"Bournemouth_2016.xlsx")
Chelsea_2016 = pd.read_excel(locate_2016+"Chelsea_2016.xlsx")
Crystalpalace_2016 = pd.read_excel(locate_2016+"Crystalpalace_2016.xlsx")
Everton_2016 = pd.read_excel(locate_2016+"Everton_2016.xlsx")
LeicesterCity_2016 = pd.read_excel(locate_2016+"LeicesterCity_2016.xlsx")
Liverpool_2016 = pd.read_excel(locate_2016+"Liverpool_2016.xlsx")
Manchestercity_2016 = pd.read_excel(locate_2016+"Manchestercity_2016.xlsx")
Manchesterunited_2016 = pd.read_excel(locate_2016+"Manchesterunited_2016.xlsx")
Newcastle_2016 = pd.read_excel(locate_2016+"Newcastle_2016.xlsx")
QPR_2016 = pd.read_excel(locate_2016+"QPR_2016.xlsx")
Southhampton_2016 = pd.read_excel(locate_2016+"Southhampton_2016.xlsx")
Stokecity_2016 = pd.read_excel(locate_2016+"Stokecity_2016.xlsx")
Sunderland_2016 = pd.read_excel(locate_2016+"Sunderland_2016.xlsx")
Swanseacity_2016 = pd.read_excel(locate_2016+"Swanseacity_2016.xlsx")
Tottenham_2016 = pd.read_excel(locate_2016+"Tottenham_2016.xlsx")
Watford_2016 = pd.read_excel(locate_2016+"Watford_2016.xlsx")
WestBromwichAlbion_2016 = pd.read_excel(locate_2016+"WestBromwichAlbion_2016.xlsx")
Westham_2016 = pd.read_excel(locate_2016+"Westham_2016.xlsx")

#2017
Arsenal_2017 = pd.read_excel(locate_2017+"Arsenal_2017.xlsx")
Bournemouth_2017 = pd.read_excel(locate_2017+"Bournemouth_2017.xlsx")
Burnley_2017 = pd.read_excel(locate_2017+"Burnley_2017.xlsx")
Chelsea_2017 = pd.read_excel(locate_2017+"Chelsea_2017.xlsx")
Crystalpalace_2017 = pd.read_excel(locate_2017+"Crystalpalace_2017.xlsx")
Everton_2017 = pd.read_excel(locate_2017+"Everton_2017.xlsx")
Hullcity_2017 = pd.read_excel(locate_2017+"Hullcity_2017.xlsx")
LeicesterCity_2017 = pd.read_excel(locate_2017+"LeicesterCity_2017.xlsx")
Liverpool_2017 = pd.read_excel(locate_2017+"Liverpool_2017.xlsx")
Manchestercity_2017 = pd.read_excel(locate_2017+"Manchestercity_2017.xlsx")
Manchesterunited_2017 = pd.read_excel(locate_2017+"Manchesterunited_2017.xlsx")
Middlesbrough_2017 = pd.read_excel(locate_2017+"Middlesbrough_2017.xlsx")
Southhampton_2017 = pd.read_excel(locate_2017+"Southhampton_2017.xlsx")
Stokecity_2017 = pd.read_excel(locate_2017+"Stokecity_2017.xlsx")
Sunderland_2017 = pd.read_excel(locate_2017+"Sunderland_2017.xlsx")
Swanseacity_2017 = pd.read_excel(locate_2017+"Swanseacity_2017.xlsx")
Tottenham_2017 = pd.read_excel(locate_2017+"Tottenham_2017.xlsx")
Watford_2017 = pd.read_excel(locate_2017+"Watford_2017.xlsx")
WestBromwichAlbion_2017 = pd.read_excel(locate_2017+"WestBromwichAlbion_2017.xlsx")
Westham_2017 = pd.read_excel(locate_2017+"Westham_2017.xlsx")

#2018
Arsenal_2018 = pd.read_excel(locate_2018+"Arsenal_2018.xlsx")
Bournemouth_2018 = pd.read_excel(locate_2018+"Bournemouth_2018.xlsx")
Brighton_2018 = pd.read_excel(locate_2018+"Brighton_2018.xlsx")
Burnley_2018 = pd.read_excel(locate_2018+"Burnley_2018.xlsx")
Chelsea_2018 = pd.read_excel(locate_2018+"Chelsea_2018.xlsx")
Crystalpalace_2018 = pd.read_excel(locate_2018+"Crystalpalace_2018.xlsx")
Everton_2018 = pd.read_excel(locate_2018+"Everton_2018.xlsx")
Huddersfieldtown_2018 = pd.read_excel(locate_2018+"Huddersfieldtown_2018.xlsx")
LeicesterCity_2018 = pd.read_excel(locate_2018+"LeicesterCity_2018.xlsx")
Liverpool_2018 = pd.read_excel(locate_2018+"Liverpool_2018.xlsx")
Manchestercity_2018 = pd.read_excel(locate_2018+"Manchestercity_2018.xlsx")
Manchesterunited_2018 = pd.read_excel(locate_2018+"Manchesterunited_2018.xlsx")
Newcastle_2018 = pd.read_excel(locate_2018+"Newcastle_2018.xlsx")
Southhampton_2018 = pd.read_excel(locate_2018+"Southhampton_2018.xlsx")
Stokecity_2018 = pd.read_excel(locate_2018+"Stokecity_2018.xlsx")
Swanseacity_2018 = pd.read_excel(locate_2018+"Swanseacity_2018.xlsx")
Tottenham_2018 = pd.read_excel(locate_2018+"Tottenham_2018.xlsx")
Watford_2018 = pd.read_excel(locate_2018+"Watford_2018.xlsx")
WestBromwichAlbion_2018 = pd.read_excel(locate_2018+"WestBromwichAlbion_2018.xlsx")
Westham_2018 = pd.read_excel(locate_2018+"Westham_2018.xlsx")

#2019
Arsenal_2019 = pd.read_excel(locate_2019+"Arsenal_2019.xlsx")
Bournemouth_2019 = pd.read_excel(locate_2019+"Bournemouth_2019.xlsx")
Brighton_2019 = pd.read_excel(locate_2019+"Brighton_2019.xlsx")
Burnley_2019 = pd.read_excel(locate_2019+"Burnley_2019.xlsx")
Cardifcity_2019 = pd.read_excel(locate_2019+"Cardifcity_2019.xlsx")
Chelsea_2019 = pd.read_excel(locate_2019+"Chelsea_2019.xlsx")
Crystalpalace_2019 = pd.read_excel(locate_2019+"Crystalpalace_2019.xlsx")
Everton_2019 = pd.read_excel(locate_2019+"Everton_2019.xlsx")
Fulham_2019 = pd.read_excel(locate_2019+"Fulham_2019.xlsx")
Huddersfieldtown_2019 = pd.read_excel(locate_2019+"Huddersfieldtown_2019.xlsx")
LeicesterCity_2019 = pd.read_excel(locate_2019+"LeicesterCity_2019.xlsx")
Liverpool_2019 = pd.read_excel(locate_2019+"Liverpool_2019.xlsx")
Manchestercity_2019 = pd.read_excel(locate_2019+"Manchestercity_2019.xlsx")
Manchesterunited_2019 = pd.read_excel(locate_2019+"Manchesterunited_2019.xlsx")
Newcastle_2019 = pd.read_excel(locate_2019+"Newcastle_2019.xlsx")
Southhampton_2019 = pd.read_excel(locate_2019+"Southhampton_2019.xlsx")
Tottenham_2019 = pd.read_excel(locate_2019+"Tottenham_2019.xlsx")
Watford_2019 = pd.read_excel(locate_2019+"Watford_2019.xlsx")
Westham_2019 = pd.read_excel(locate_2019+"Westham_2019.xlsx")
WolverhamptonWanderers_2019 = pd.read_excel(locate_2019+"WolverhamptonWanderers_2019.xlsx")

#2020
Arsenal_2020 = pd.read_excel(locate_2020+"Arsenal_2020.xlsx")
AstonVilla_2020 = pd.read_excel(locate_2020+"AstonVilla_2020.xlsx")
Bournemouth_2020 = pd.read_excel(locate_2020+"Bournemouth_2020.xlsx")
Brighton_2020 = pd.read_excel(locate_2020+"Brighton_2020.xlsx")
Burnley_2020 = pd.read_excel(locate_2020+"Burnley_2020.xlsx")
Chelsea_2020 = pd.read_excel(locate_2020+"Chelsea_2020.xlsx")
Crystalpalace_2020 = pd.read_excel(locate_2020+"Crystalpalace_2020.xlsx")
Everton_2020 = pd.read_excel(locate_2020+"Everton_2020.xlsx")
LeicesterCity_2020 = pd.read_excel(locate_2020+"LeicesterCity_2020.xlsx")
Liverpool_2020 = pd.read_excel(locate_2020+"Liverpool_2020.xlsx")
Manchestercity_2020 = pd.read_excel(locate_2020+"Manchestercity_2020.xlsx")
Manchesterunited_2020 = pd.read_excel(locate_2020+"Manchesterunited_2020.xlsx")
Newcastle_2020 = pd.read_excel(locate_2020+"Newcastle_2020.xlsx")
Norich_2020 = pd.read_excel(locate_2020+"Norich_2020.xlsx")
Southhampton_2020 = pd.read_excel(locate_2020+"Southhampton_2020.xlsx")
Sheffieldunited_2020 = pd.read_excel(locate_2020+"Sheffieldunited_2020.xlsx")
Tottenham_2020 = pd.read_excel(locate_2020+"Tottenham_2020.xlsx")
Watford_2020 = pd.read_excel(locate_2020+"Watford_2020.xlsx")
Westham_2020 = pd.read_excel(locate_2020+"Westham_2020.xlsx")
WolverhamptonWanderers_2020 = pd.read_excel(locate_2020+"WolverhamptonWanderers_2020.xlsx")

def player_stat_standardization(team):
  array=["RATING","PACE","SHOOTING","PASSING","DRIBBLING","DEFENDING","PHYSICAL"]
  
  is_Att = (team["MAIN"] == 1)&((team["POSITION"]=='ST')|(team["POSITION"]=='LW')|(team["POSITION"]=='RW')|(team["POSITION"]=='CF')|(team["POSITION"]=='LS')|(team["POSITION"]=='RS')|(team["POSITION"]=='LF')|(team["POSITION"]=='RF'))
  Att = team[is_Att]
  avg_Att = Att[array].mean()
  
  is_Mid = (team["MAIN"] == 1)&((team["POSITION"]=='LM')|(team["POSITION"]=='RM')|(team["POSITION"]=='CM')|(team["POSITION"]=='CAM')|(team["POSITION"]=='LAM')|(team["POSITION"]=='RAM')|(team["POSITION"]=='LCM')|(team["POSITION"]=='RCM')|(team["POSITION"]=='LDM')|(team["POSITION"]=='RDM')|(team["POSITION"]=='CDM'))
  Mid = team[is_Mid]
  avg_Mid = Mid[array].mean()
  
  is_Def = (team["MAIN"] == 1)&((team["POSITION"]=='LWB')|(team["POSITION"]=='RWB')|(team["POSITION"]=='LB')|(team["POSITION"]=='RB')|(team["POSITION"]=='CB')|(team["POSITION"]=='LCB')|(team["POSITION"]=='RCB'))
  Def = team[is_Def]
  avg_Def = Mid[array].mean()
  
  is_Ben = (team["MAIN"] == 2)
  Ben = team[is_Ben]
  avg_Ben = Ben["RATING"].mean()
  
  result = pd.concat([avg_Att,avg_Mid,avg_Def],axis=0)
  result["Bench_RATING"]=avg_Ben
  result = pd.DataFrame(result)
  result.index = ['Att_RATING','Att_PACE','Att_SHOOTING','Att_PASSING','Att_DRIBBLING','Att_DEFENDING','Att_PHYSICAL','Mid_RATING','Mid_PACE','Mid_SHOOTING','Mid_PASSING','Mid_DRIBBLING','Mid_DEFENDING','Mid_PHYSICAL','Def_RATING','Def_PACE','Def_SHOOTING','Def_PASSING','Def_DRIBBLING','Def_DEFENDING','Def_PHYSICAL','Bench_RATING']
  return result.T

"""#Create Input Data"""

Home = pd.DataFrame({'Att_RATING':[],'Att_PACE':[],'Att_SHOOTING':[],'Att_PASSING':[],'Att_DRIBBLING':[],'Att_DEFENDING':[],'Att_PHYSICAL':[],'Mid_RATING':[],'Mid_PACE':[],'Mid_SHOOTING':[],'Mid_PASSING':[],'Mid_DRIBBLING':[],'Mid_DEFENDING':[],'Mid_PHYSICAL':[],'Def_RATING':[],'Def_PACE':[],'Def_SHOOTING':[],'Def_PASSING':[],'Def_DRIBBLING':[],'Def_DEFENDING':[],'Def_PHYSICAL':[],'Bench_RATING':[]})
Away = pd.DataFrame({'Att_RATING':[],'Att_PACE':[],'Att_SHOOTING':[],'Att_PASSING':[],'Att_DRIBBLING':[],'Att_DEFENDING':[],'Att_PHYSICAL':[],'Mid_RATING':[],'Mid_PACE':[],'Mid_SHOOTING':[],'Mid_PASSING':[],'Mid_DRIBBLING':[],'Mid_DEFENDING':[],'Mid_PHYSICAL':[],'Def_RATING':[],'Def_PACE':[],'Def_SHOOTING':[],'Def_PASSING':[],'Def_DRIBBLING':[],'Def_DEFENDING':[],'Def_PHYSICAL':[],'Bench_RATING':[]})
array_2011 = ["Arsenal","Aston Villa","Birmingham","Blackburn","Blackpool","Bolton","Chelsea","Everton","Fulham","Liverpool","Man City","Man United","Newcastle","Stoke","Sunderland","Tottenham","West Brom","West Ham","Wigan","Wolves"]
for i in range(380):
  if trainset["HomeTeam"][i] == array_2011[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2011)])
  elif trainset["HomeTeam"][i] == array_2011[1]:
    Home = pd.concat([Home,player_stat_standardization(AstonVilla_2011)])
  elif trainset["HomeTeam"][i] == array_2011[2]:
    Home = pd.concat([Home,player_stat_standardization(Birminghamcity_2011)])
  elif trainset["HomeTeam"][i] == array_2011[3]:
    Home = pd.concat([Home,player_stat_standardization(BlackburnRovers_2011)])
  elif trainset["HomeTeam"][i] == array_2011[4]:
    Home = pd.concat([Home,player_stat_standardization(Blackpool_2011)])
  elif trainset["HomeTeam"][i] == array_2011[5]:
    Home = pd.concat([Home,player_stat_standardization(BoltonWanderers_2011)])
  elif trainset["HomeTeam"][i] == array_2011[6]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2011)])
  elif trainset["HomeTeam"][i] == array_2011[7]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2011)])
  elif trainset["HomeTeam"][i] == array_2011[8]:
    Home = pd.concat([Home,player_stat_standardization(Fulham_2011)])
  elif trainset["HomeTeam"][i] == array_2011[9]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2011)])
  elif trainset["HomeTeam"][i] == array_2011[10]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2011)])
  elif trainset["HomeTeam"][i] == array_2011[11]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2011)])
  elif trainset["HomeTeam"][i] == array_2011[12]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2011)])
  elif trainset["HomeTeam"][i] == array_2011[13]:
    Home = pd.concat([Home,player_stat_standardization(Stokecity_2011)])
  elif trainset["HomeTeam"][i] == array_2011[14]:
    Home = pd.concat([Home,player_stat_standardization(Sunderland_2011)])
  elif trainset["HomeTeam"][i] == array_2011[15]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2011)])
  elif trainset["HomeTeam"][i] == array_2011[16]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_20111)])
  elif trainset["HomeTeam"][i] == array_2011[17]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2011)])
  elif trainset["HomeTeam"][i] == array_2011[18]:
    Home = pd.concat([Home,player_stat_standardization(WiganAthletic_2011)])
  elif trainset["HomeTeam"][i] == array_2011[19]:
    Home = pd.concat([Home,player_stat_standardization(WolverhamptonWanderers_2011)])
  
  if trainset["AwayTeam"][i] == array_2011[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2011)])
  elif trainset["AwayTeam"][i] == array_2011[1]:
    Away = pd.concat([Away,player_stat_standardization(AstonVilla_2011)])
  elif trainset["AwayTeam"][i] == array_2011[2]:
    Away = pd.concat([Away,player_stat_standardization(Birminghamcity_2011)])
  elif trainset["AwayTeam"][i] == array_2011[3]:
    Away = pd.concat([Away,player_stat_standardization(BlackburnRovers_2011)])
  elif trainset["AwayTeam"][i] == array_2011[4]:
    Away = pd.concat([Away,player_stat_standardization(Blackpool_2011)])
  elif trainset["AwayTeam"][i] == array_2011[5]:
    Away = pd.concat([Away,player_stat_standardization(BoltonWanderers_2011)])
  elif trainset["AwayTeam"][i] == array_2011[6]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2011)])
  elif trainset["AwayTeam"][i] == array_2011[7]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2011)])
  elif trainset["AwayTeam"][i] == array_2011[8]:
    Away = pd.concat([Away,player_stat_standardization(Fulham_2011)])
  elif trainset["AwayTeam"][i] == array_2011[9]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2011)])
  elif trainset["AwayTeam"][i] == array_2011[10]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2011)])
  elif trainset["AwayTeam"][i] == array_2011[11]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2011)])
  elif trainset["AwayTeam"][i] == array_2011[12]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2011)])
  elif trainset["AwayTeam"][i] == array_2011[13]:
    Away = pd.concat([Away,player_stat_standardization(Stokecity_2011)])
  elif trainset["AwayTeam"][i] == array_2011[14]:
    Away = pd.concat([Away,player_stat_standardization(Sunderland_2011)])
  elif trainset["AwayTeam"][i] == array_2011[15]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2011)])
  elif trainset["AwayTeam"][i] == array_2011[16]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_20111)])
  elif trainset["AwayTeam"][i] == array_2011[17]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2011)])
  elif trainset["AwayTeam"][i] == array_2011[18]:
    Away = pd.concat([Away,player_stat_standardization(WiganAthletic_2011)])
  elif trainset["AwayTeam"][i] == array_2011[19]:
    Away = pd.concat([Away,player_stat_standardization(WolverhamptonWanderers_2011)])

array_2012 = ["Arsenal","Aston Villa","Blackburn","Bolton","Chelsea","Everton","Fulham","Liverpool","Man City","Man United","Newcastle","Norwich","QPR","Stoke","Sunderland","Swansea","Tottenham","West Brom","Wigan","Wolves"]
for i in range(380,760):
  if trainset["HomeTeam"][i] == array_2012[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2012)])
  elif trainset["HomeTeam"][i] == array_2012[1]:
    Home = pd.concat([Home,player_stat_standardization(AstonVilla_2012)])
  elif trainset["HomeTeam"][i] == array_2012[2]:
    Home = pd.concat([Home,player_stat_standardization(BlackburnRovers_2012)])
  elif trainset["HomeTeam"][i] == array_2012[3]:
    Home = pd.concat([Home,player_stat_standardization(BoltonWanderers_2012)])
  elif trainset["HomeTeam"][i] == array_2012[4]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2012)])
  elif trainset["HomeTeam"][i] == array_2012[5]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2012)])
  elif trainset["HomeTeam"][i] == array_2012[6]:
    Home = pd.concat([Home,player_stat_standardization(Fulham_2012)])
  elif trainset["HomeTeam"][i] == array_2012[7]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2012)])
  elif trainset["HomeTeam"][i] == array_2012[8]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2012)])
  elif trainset["HomeTeam"][i] == array_2012[9]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2012)])
  elif trainset["HomeTeam"][i] == array_2012[10]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2012)])
  elif trainset["HomeTeam"][i] == array_2012[11]:
    Home = pd.concat([Home,player_stat_standardization(Norich_2012)])
  elif trainset["HomeTeam"][i] == array_2012[12]:
    Home = pd.concat([Home,player_stat_standardization(QPR_2012)])
  elif trainset["HomeTeam"][i] == array_2012[13]:
    Home = pd.concat([Home,player_stat_standardization(Stokecity_2012)])
  elif trainset["HomeTeam"][i] == array_2012[14]:
    Home = pd.concat([Home,player_stat_standardization(Sunderland_2012)])
  elif trainset["HomeTeam"][i] == array_2012[15]:
    Home = pd.concat([Home,player_stat_standardization(Swanseacity_2012)])
  elif trainset["HomeTeam"][i] == array_2012[16]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2012)])
  elif trainset["HomeTeam"][i] == array_2012[17]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_2012)])
  elif trainset["HomeTeam"][i] == array_2012[18]:
    Home = pd.concat([Home,player_stat_standardization(WiganAthletic_2012)])
  elif trainset["HomeTeam"][i] == array_2012[19]:
    Home = pd.concat([Home,player_stat_standardization(WolverhamptonWanderers_2012)])
  
  if trainset["AwayTeam"][i] == array_2012[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2012)])
  elif trainset["AwayTeam"][i] == array_2012[1]:
    Away = pd.concat([Away,player_stat_standardization(AstonVilla_2012)])
  elif trainset["AwayTeam"][i] == array_2012[2]:
    Away = pd.concat([Away,player_stat_standardization(BlackburnRovers_2012)])
  elif trainset["AwayTeam"][i] == array_2012[3]:
    Away = pd.concat([Away,player_stat_standardization(BoltonWanderers_2012)])
  elif trainset["AwayTeam"][i] == array_2012[4]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2012)])
  elif trainset["AwayTeam"][i] == array_2012[5]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2012)])
  elif trainset["AwayTeam"][i] == array_2012[6]:
    Away = pd.concat([Away,player_stat_standardization(Fulham_2012)])
  elif trainset["AwayTeam"][i] == array_2012[7]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2012)])
  elif trainset["AwayTeam"][i] == array_2012[8]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2012)])
  elif trainset["AwayTeam"][i] == array_2012[9]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2012)])
  elif trainset["AwayTeam"][i] == array_2012[10]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2012)])
  elif trainset["AwayTeam"][i] == array_2012[11]:
    Away = pd.concat([Away,player_stat_standardization(Norich_2012)])
  elif trainset["AwayTeam"][i] == array_2012[12]:
    Away = pd.concat([Away,player_stat_standardization(QPR_2012)])
  elif trainset["AwayTeam"][i] == array_2012[13]:
    Away = pd.concat([Away,player_stat_standardization(Stokecity_2012)])
  elif trainset["AwayTeam"][i] == array_2012[14]:
    Away = pd.concat([Away,player_stat_standardization(Sunderland_2012)])
  elif trainset["AwayTeam"][i] == array_2012[15]:
    Away = pd.concat([Away,player_stat_standardization(Swanseacity_2012)])
  elif trainset["AwayTeam"][i] == array_2012[16]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2012)])
  elif trainset["AwayTeam"][i] == array_2012[17]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_2012)])
  elif trainset["AwayTeam"][i] == array_2012[18]:
    Away = pd.concat([Away,player_stat_standardization(WiganAthletic_2012)])
  elif trainset["AwayTeam"][i] == array_2012[19]:
    Away = pd.concat([Away,player_stat_standardization(WolverhamptonWanderers_2012)])

array_2013 = ["Arsenal","Aston Villa","Chelsea","Everton","Fulham","Liverpool","Man City","Man United","Newcastle","Norwich","QPR","Reading","Southampton","Stoke","Sunderland","Swansea","Tottenham","West Brom","West Ham","Wigan"]
for i in range(760,1140):
  if trainset["HomeTeam"][i] == array_2013[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2013)])
  elif trainset["HomeTeam"][i] == array_2013[1]:
    Home = pd.concat([Home,player_stat_standardization(AstonVilla_2013)])
  elif trainset["HomeTeam"][i] == array_2013[2]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2013)])
  elif trainset["HomeTeam"][i] == array_2013[3]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2013)])
  elif trainset["HomeTeam"][i] == array_2013[4]:
    Home = pd.concat([Home,player_stat_standardization(Fulham_2013)])
  elif trainset["HomeTeam"][i] == array_2013[5]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2013)])
  elif trainset["HomeTeam"][i] == array_2013[6]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2013)])
  elif trainset["HomeTeam"][i] == array_2013[7]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2013)])
  elif trainset["HomeTeam"][i] == array_2013[8]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2013)])
  elif trainset["HomeTeam"][i] == array_2013[9]:
    Home = pd.concat([Home,player_stat_standardization(Norich_2013)])
  elif trainset["HomeTeam"][i] == array_2013[10]:
    Home = pd.concat([Home,player_stat_standardization(QPR_2013)])
  elif trainset["HomeTeam"][i] == array_2013[11]:
    Home = pd.concat([Home,player_stat_standardization(Reading_2013)])
  elif trainset["HomeTeam"][i] == array_2013[12]:
    Home = pd.concat([Home,player_stat_standardization(Southhampton_2013)])
  elif trainset["HomeTeam"][i] == array_2013[13]:
    Home = pd.concat([Home,player_stat_standardization(Stokecity_2013)])
  elif trainset["HomeTeam"][i] == array_2013[14]:
    Home = pd.concat([Home,player_stat_standardization(Sunderland_2013)])
  elif trainset["HomeTeam"][i] == array_2013[15]:
    Home = pd.concat([Home,player_stat_standardization(Swanseacity_2013)])
  elif trainset["HomeTeam"][i] == array_2013[16]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2013)])
  elif trainset["HomeTeam"][i] == array_2013[17]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_2013)])
  elif trainset["HomeTeam"][i] == array_2013[18]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2013)])
  elif trainset["HomeTeam"][i] == array_2013[19]:
    Home = pd.concat([Home,player_stat_standardization(Wigan_2013)])

  if trainset["AwayTeam"][i] == array_2013[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2013)])
  elif trainset["AwayTeam"][i] == array_2013[1]:
    Away = pd.concat([Away,player_stat_standardization(AstonVilla_2013)])
  elif trainset["AwayTeam"][i] == array_2013[2]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2013)])
  elif trainset["AwayTeam"][i] == array_2013[3]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2013)])
  elif trainset["AwayTeam"][i] == array_2013[4]:
    Away = pd.concat([Away,player_stat_standardization(Fulham_2013)])
  elif trainset["AwayTeam"][i] == array_2013[5]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2013)])
  elif trainset["AwayTeam"][i] == array_2013[6]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2013)])
  elif trainset["AwayTeam"][i] == array_2013[7]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2013)])
  elif trainset["AwayTeam"][i] == array_2013[8]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2013)])
  elif trainset["AwayTeam"][i] == array_2013[9]:
    Away = pd.concat([Away,player_stat_standardization(Norich_2013)])
  elif trainset["AwayTeam"][i] == array_2013[10]:
    Away = pd.concat([Away,player_stat_standardization(QPR_2013)])
  elif trainset["AwayTeam"][i] == array_2013[11]:
    Away = pd.concat([Away,player_stat_standardization(Reading_2013)])
  elif trainset["AwayTeam"][i] == array_2013[12]:
    Away = pd.concat([Away,player_stat_standardization(Southhampton_2013)])
  elif trainset["AwayTeam"][i] == array_2013[13]:
    Away = pd.concat([Away,player_stat_standardization(Stokecity_2013)])
  elif trainset["AwayTeam"][i] == array_2013[14]:
    Away = pd.concat([Away,player_stat_standardization(Sunderland_2013)])
  elif trainset["AwayTeam"][i] == array_2013[15]:
    Away = pd.concat([Away,player_stat_standardization(Swanseacity_2013)])
  elif trainset["AwayTeam"][i] == array_2013[16]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2013)])
  elif trainset["AwayTeam"][i] == array_2013[17]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_2013)])
  elif trainset["AwayTeam"][i] == array_2013[18]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2013)])
  elif trainset["AwayTeam"][i] == array_2013[19]:
    Away = pd.concat([Away,player_stat_standardization(Wigan_2013)])

array_2014 = ["Arsenal","Aston Villa","Cardiff","Chelsea","Crystal Palace","Everton","Fulham","Hull","Liverpool","Man City","Man United","Newcastle","Norwich","Southampton","Stoke","Sunderland","Swansea","Tottenham","West Brom","West Ham"]
for i in range(1140,1520):
  if trainset["HomeTeam"][i] == array_2014[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2014)])
  elif trainset["HomeTeam"][i] == array_2014[1]:
    Home = pd.concat([Home,player_stat_standardization(AstonVilla_2014)])
  elif trainset["HomeTeam"][i] == array_2014[2]:
    Home = pd.concat([Home,player_stat_standardization(Cardifcity_2014)])
  elif trainset["HomeTeam"][i] == array_2014[3]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2014)])
  elif trainset["HomeTeam"][i] == array_2014[4]:
    Home = pd.concat([Home,player_stat_standardization(Crystalpalace_2014)])
  elif trainset["HomeTeam"][i] == array_2014[5]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2014)])
  elif trainset["HomeTeam"][i] == array_2014[6]:
    Home = pd.concat([Home,player_stat_standardization(Fulham_2014)])
  elif trainset["HomeTeam"][i] == array_2014[7]:
    Home = pd.concat([Home,player_stat_standardization(Hullcity_2014)])
  elif trainset["HomeTeam"][i] == array_2014[8]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2014)])
  elif trainset["HomeTeam"][i] == array_2014[9]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2014)])
  elif trainset["HomeTeam"][i] == array_2014[10]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2014)])
  elif trainset["HomeTeam"][i] == array_2014[11]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2014)])
  elif trainset["HomeTeam"][i] == array_2014[12]:
    Home = pd.concat([Home,player_stat_standardization(Norich_2014)])
  elif trainset["HomeTeam"][i] == array_2014[13]:
    Home = pd.concat([Home,player_stat_standardization(Southhampton_2014)])
  elif trainset["HomeTeam"][i] == array_2014[14]:
    Home = pd.concat([Home,player_stat_standardization(Stokecity_2014)])
  elif trainset["HomeTeam"][i] == array_2014[15]:
    Home = pd.concat([Home,player_stat_standardization(Sunderland_2014)])
  elif trainset["HomeTeam"][i] == array_2014[16]:
    Home = pd.concat([Home,player_stat_standardization(Swanseacity_2014)])
  elif trainset["HomeTeam"][i] == array_2014[17]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2014)])
  elif trainset["HomeTeam"][i] == array_2014[18]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_2014)])
  elif trainset["HomeTeam"][i] == array_2014[19]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2014)])

  if trainset["AwayTeam"][i] == array_2014[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2014)])
  elif trainset["AwayTeam"][i] == array_2014[1]:
    Away = pd.concat([Away,player_stat_standardization(AstonVilla_2014)])
  elif trainset["AwayTeam"][i] == array_2014[2]:
    Away = pd.concat([Away,player_stat_standardization(Cardifcity_2014)])
  elif trainset["AwayTeam"][i] == array_2014[3]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2014)])
  elif trainset["AwayTeam"][i] == array_2014[4]:
    Away = pd.concat([Away,player_stat_standardization(Crystalpalace_2014)])
  elif trainset["AwayTeam"][i] == array_2014[5]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2014)])
  elif trainset["AwayTeam"][i] == array_2014[6]:
    Away = pd.concat([Away,player_stat_standardization(Fulham_2014)])
  elif trainset["AwayTeam"][i] == array_2014[7]:
    Away = pd.concat([Away,player_stat_standardization(Hullcity_2014)])
  elif trainset["AwayTeam"][i] == array_2014[8]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2014)])
  elif trainset["AwayTeam"][i] == array_2014[9]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2014)])
  elif trainset["AwayTeam"][i] == array_2014[10]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2014)])
  elif trainset["AwayTeam"][i] == array_2014[11]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2014)])
  elif trainset["AwayTeam"][i] == array_2014[12]:
    Away = pd.concat([Away,player_stat_standardization(Norich_2014)])
  elif trainset["AwayTeam"][i] == array_2014[13]:
    Away = pd.concat([Away,player_stat_standardization(Southhampton_2014)])
  elif trainset["AwayTeam"][i] == array_2014[14]:
    Away = pd.concat([Away,player_stat_standardization(Stokecity_2014)])
  elif trainset["AwayTeam"][i] == array_2014[15]:
    Away = pd.concat([Away,player_stat_standardization(Sunderland_2014)])
  elif trainset["AwayTeam"][i] == array_2014[16]:
    Away = pd.concat([Away,player_stat_standardization(Swanseacity_2014)])
  elif trainset["AwayTeam"][i] == array_2014[17]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2014)])
  elif trainset["AwayTeam"][i] == array_2014[18]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_2014)])
  elif trainset["AwayTeam"][i] == array_2014[19]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2014)])

array_2015 = ["Arsenal","Aston Villa","Burnley","Chelsea","Crystal Palace","Everton","Hull","Leicester","Liverpool","Man City","Man United","Newcastle","QPR","Southampton","Stoke","Sunderland","Swansea","Tottenham","West Brom","West Ham"]
for i in range(1520,1900):
  if trainset["HomeTeam"][i] == array_2015[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2015)])
  elif trainset["HomeTeam"][i] == array_2015[1]:
    Home = pd.concat([Home,player_stat_standardization(AstonVilla_2015)])
  elif trainset["HomeTeam"][i] == array_2015[2]:
    Home = pd.concat([Home,player_stat_standardization(Burnley_2015)])
  elif trainset["HomeTeam"][i] == array_2015[3]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2015)])
  elif trainset["HomeTeam"][i] == array_2015[4]:
    Home = pd.concat([Home,player_stat_standardization(Crystalpalace_2015)])
  elif trainset["HomeTeam"][i] == array_2015[5]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2015)])
  elif trainset["HomeTeam"][i] == array_2015[6]:
    Home = pd.concat([Home,player_stat_standardization(Hullcity_2015)])
  elif trainset["HomeTeam"][i] == array_2015[7]:
    Home = pd.concat([Home,player_stat_standardization(LeicesterCity_2015)])
  elif trainset["HomeTeam"][i] == array_2015[8]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2015)])
  elif trainset["HomeTeam"][i] == array_2015[9]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2015)])
  elif trainset["HomeTeam"][i] == array_2015[10]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2015)])
  elif trainset["HomeTeam"][i] == array_2015[11]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2015)])
  elif trainset["HomeTeam"][i] == array_2015[12]:
    Home = pd.concat([Home,player_stat_standardization(QPR_2015)])
  elif trainset["HomeTeam"][i] == array_2015[13]:
    Home = pd.concat([Home,player_stat_standardization(Southhampton_2015)])
  elif trainset["HomeTeam"][i] == array_2015[14]:
    Home = pd.concat([Home,player_stat_standardization(Stokecity_2015)])
  elif trainset["HomeTeam"][i] == array_2015[15]:
    Home = pd.concat([Home,player_stat_standardization(Sunderland_2015)])
  elif trainset["HomeTeam"][i] == array_2015[16]:
    Home = pd.concat([Home,player_stat_standardization(Swanseacity_2015)])
  elif trainset["HomeTeam"][i] == array_2015[17]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2015)])
  elif trainset["HomeTeam"][i] == array_2015[18]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_2015)])
  elif trainset["HomeTeam"][i] == array_2015[19]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2015)])

  if trainset["AwayTeam"][i] == array_2015[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2015)])
  elif trainset["AwayTeam"][i] == array_2015[1]:
    Away = pd.concat([Away,player_stat_standardization(AstonVilla_2015)])
  elif trainset["AwayTeam"][i] == array_2015[2]:
    Away = pd.concat([Away,player_stat_standardization(Burnley_2015)])
  elif trainset["AwayTeam"][i] == array_2015[3]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2015)])
  elif trainset["AwayTeam"][i] == array_2015[4]:
    Away = pd.concat([Away,player_stat_standardization(Crystalpalace_2015)])
  elif trainset["AwayTeam"][i] == array_2015[5]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2015)])
  elif trainset["AwayTeam"][i] == array_2015[6]:
    Away = pd.concat([Away,player_stat_standardization(Hullcity_2015)])
  elif trainset["AwayTeam"][i] == array_2015[7]:
    Away = pd.concat([Away,player_stat_standardization(LeicesterCity_2015)])
  elif trainset["AwayTeam"][i] == array_2015[8]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2015)])
  elif trainset["AwayTeam"][i] == array_2015[9]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2015)])
  elif trainset["AwayTeam"][i] == array_2015[10]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2015)])
  elif trainset["AwayTeam"][i] == array_2015[11]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2015)])
  elif trainset["AwayTeam"][i] == array_2015[12]:
    Away = pd.concat([Away,player_stat_standardization(QPR_2015)])
  elif trainset["AwayTeam"][i] == array_2015[13]:
    Away = pd.concat([Away,player_stat_standardization(Southhampton_2015)])
  elif trainset["AwayTeam"][i] == array_2015[14]:
    Away = pd.concat([Away,player_stat_standardization(Stokecity_2015)])
  elif trainset["AwayTeam"][i] == array_2015[15]:
    Away = pd.concat([Away,player_stat_standardization(Sunderland_2015)])
  elif trainset["AwayTeam"][i] == array_2015[16]:
    Away = pd.concat([Away,player_stat_standardization(Swanseacity_2015)])
  elif trainset["AwayTeam"][i] == array_2015[17]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2015)])
  elif trainset["AwayTeam"][i] == array_2015[18]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_2015)])
  elif trainset["AwayTeam"][i] == array_2015[19]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2015)])

array_2016 = ["Arsenal","Aston Villa","Bournemouth","Chelsea","Crystal Palace","Everton","Leicester","Liverpool","Man City","Man United","Newcastle","Norwich","Southampton","Stoke","Sunderland","Swansea","Tottenham","Watford","West Brom","West Ham"]
for i in range(1900,2280):
  if trainset["HomeTeam"][i] == array_2016[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2016)])
  elif trainset["HomeTeam"][i] == array_2016[1]:
    Home = pd.concat([Home,player_stat_standardization(AstonVilla_2016)])
  elif trainset["HomeTeam"][i] == array_2016[2]:
    Home = pd.concat([Home,player_stat_standardization(Bournemouth_2016)])
  elif trainset["HomeTeam"][i] == array_2016[3]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2016)])
  elif trainset["HomeTeam"][i] == array_2016[4]:
    Home = pd.concat([Home,player_stat_standardization(Crystalpalace_2016)])
  elif trainset["HomeTeam"][i] == array_2016[5]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2016)])
  elif trainset["HomeTeam"][i] == array_2016[6]:
    Home = pd.concat([Home,player_stat_standardization(LeicesterCity_2016)])
  elif trainset["HomeTeam"][i] == array_2016[7]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2016)])
  elif trainset["HomeTeam"][i] == array_2016[8]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2016)])
  elif trainset["HomeTeam"][i] == array_2016[9]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2016)])
  elif trainset["HomeTeam"][i] == array_2016[10]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2016)])
  elif trainset["HomeTeam"][i] == array_2016[11]:
    Home = pd.concat([Home,player_stat_standardization(QPR_2016)])
  elif trainset["HomeTeam"][i] == array_2016[12]:
    Home = pd.concat([Home,player_stat_standardization(Southhampton_2016)])
  elif trainset["HomeTeam"][i] == array_2016[13]:
    Home = pd.concat([Home,player_stat_standardization(Stokecity_2016)])
  elif trainset["HomeTeam"][i] == array_2016[14]:
    Home = pd.concat([Home,player_stat_standardization(Sunderland_2016)])
  elif trainset["HomeTeam"][i] == array_2016[15]:
    Home = pd.concat([Home,player_stat_standardization(Swanseacity_2016)])
  elif trainset["HomeTeam"][i] == array_2016[16]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2016)])
  elif trainset["HomeTeam"][i] == array_2016[17]:
    Home = pd.concat([Home,player_stat_standardization(Watford_2016)])
  elif trainset["HomeTeam"][i] == array_2016[18]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_2016)])
  elif trainset["HomeTeam"][i] == array_2016[19]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2016)])

  if trainset["AwayTeam"][i] == array_2016[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2016)])
  elif trainset["AwayTeam"][i] == array_2016[1]:
    Away = pd.concat([Away,player_stat_standardization(AstonVilla_2016)])
  elif trainset["AwayTeam"][i] == array_2016[2]:
    Away = pd.concat([Away,player_stat_standardization(Bournemouth_2016)])
  elif trainset["AwayTeam"][i] == array_2016[3]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2016)])
  elif trainset["AwayTeam"][i] == array_2016[4]:
    Away = pd.concat([Away,player_stat_standardization(Crystalpalace_2016)])
  elif trainset["AwayTeam"][i] == array_2016[5]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2016)])
  elif trainset["AwayTeam"][i] == array_2016[6]:
    Away = pd.concat([Away,player_stat_standardization(LeicesterCity_2016)])
  elif trainset["AwayTeam"][i] == array_2016[7]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2016)])
  elif trainset["AwayTeam"][i] == array_2016[8]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2016)])
  elif trainset["AwayTeam"][i] == array_2016[9]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2016)])
  elif trainset["AwayTeam"][i] == array_2016[10]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2016)])
  elif trainset["AwayTeam"][i] == array_2016[11]:
    Away = pd.concat([Away,player_stat_standardization(QPR_2016)])
  elif trainset["AwayTeam"][i] == array_2016[12]:
    Away = pd.concat([Away,player_stat_standardization(Southhampton_2016)])
  elif trainset["AwayTeam"][i] == array_2016[13]:
    Away = pd.concat([Away,player_stat_standardization(Stokecity_2016)])
  elif trainset["AwayTeam"][i] == array_2016[14]:
    Away = pd.concat([Away,player_stat_standardization(Sunderland_2016)])
  elif trainset["AwayTeam"][i] == array_2016[15]:
    Away = pd.concat([Away,player_stat_standardization(Swanseacity_2016)])
  elif trainset["AwayTeam"][i] == array_2016[16]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2016)])
  elif trainset["AwayTeam"][i] == array_2016[17]:
    Away = pd.concat([Away,player_stat_standardization(Watford_2016)])
  elif trainset["AwayTeam"][i] == array_2016[18]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_2016)])
  elif trainset["AwayTeam"][i] == array_2016[19]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2016)])

array_2017 = ["Arsenal","Bournemouth","Burnley","Chelsea","Crystal Palace","Everton","Hull","Leicester","Liverpool","Man City","Man United","Middlesbrough","Southampton","Stoke","Sunderland","Swansea","Tottenham","Watford","West Brom","West Ham"]
for i in range(2280,2660):
  if trainset["HomeTeam"][i] == array_2017[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2017)])
  elif trainset["HomeTeam"][i] == array_2017[1]:
    Home = pd.concat([Home,player_stat_standardization(Bournemouth_2017)])
  elif trainset["HomeTeam"][i] == array_2017[2]:
    Home = pd.concat([Home,player_stat_standardization(Burnley_2017)])
  elif trainset["HomeTeam"][i] == array_2017[3]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2017)])
  elif trainset["HomeTeam"][i] == array_2017[4]:
    Home = pd.concat([Home,player_stat_standardization(Crystalpalace_2017)])
  elif trainset["HomeTeam"][i] == array_2017[5]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2017)])
  elif trainset["HomeTeam"][i] == array_2017[6]:
    Home = pd.concat([Home,player_stat_standardization(Hullcity_2017)])
  elif trainset["HomeTeam"][i] == array_2017[7]:
    Home = pd.concat([Home,player_stat_standardization(LeicesterCity_2017)])
  elif trainset["HomeTeam"][i] == array_2017[8]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2017)])
  elif trainset["HomeTeam"][i] == array_2017[9]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2017)])
  elif trainset["HomeTeam"][i] == array_2017[10]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2017)])
  elif trainset["HomeTeam"][i] == array_2017[11]:
    Home = pd.concat([Home,player_stat_standardization(Middlesbrough_2017)])
  elif trainset["HomeTeam"][i] == array_2017[12]:
    Home = pd.concat([Home,player_stat_standardization(Southhampton_2017)])
  elif trainset["HomeTeam"][i] == array_2017[13]:
    Home = pd.concat([Home,player_stat_standardization(Stokecity_2017)])
  elif trainset["HomeTeam"][i] == array_2017[14]:
    Home = pd.concat([Home,player_stat_standardization(Sunderland_2017)])
  elif trainset["HomeTeam"][i] == array_2017[15]:
    Home = pd.concat([Home,player_stat_standardization(Swanseacity_2017)])
  elif trainset["HomeTeam"][i] == array_2017[16]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2017)])
  elif trainset["HomeTeam"][i] == array_2017[17]:
    Home = pd.concat([Home,player_stat_standardization(Watford_2017)])
  elif trainset["HomeTeam"][i] == array_2017[18]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_2017)])
  elif trainset["HomeTeam"][i] == array_2017[19]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2017)])

  if trainset["AwayTeam"][i] == array_2017[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2017)])
  elif trainset["AwayTeam"][i] == array_2017[1]:
    Away = pd.concat([Away,player_stat_standardization(Bournemouth_2017)])
  elif trainset["AwayTeam"][i] == array_2017[2]:
    Away = pd.concat([Away,player_stat_standardization(Burnley_2017)])
  elif trainset["AwayTeam"][i] == array_2017[3]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2017)])
  elif trainset["AwayTeam"][i] == array_2017[4]:
    Away = pd.concat([Away,player_stat_standardization(Crystalpalace_2017)])
  elif trainset["AwayTeam"][i] == array_2017[5]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2017)])
  elif trainset["AwayTeam"][i] == array_2017[6]:
    Away = pd.concat([Away,player_stat_standardization(Hullcity_2017)])
  elif trainset["AwayTeam"][i] == array_2017[7]:
    Away = pd.concat([Away,player_stat_standardization(LeicesterCity_2017)])
  elif trainset["AwayTeam"][i] == array_2017[8]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2017)])
  elif trainset["AwayTeam"][i] == array_2017[9]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2017)])
  elif trainset["AwayTeam"][i] == array_2017[10]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2017)])
  elif trainset["AwayTeam"][i] == array_2017[11]:
    Away = pd.concat([Away,player_stat_standardization(Middlesbrough_2017)])
  elif trainset["AwayTeam"][i] == array_2017[12]:
    Away = pd.concat([Away,player_stat_standardization(Southhampton_2017)])
  elif trainset["AwayTeam"][i] == array_2017[13]:
    Away = pd.concat([Away,player_stat_standardization(Stokecity_2017)])
  elif trainset["AwayTeam"][i] == array_2017[14]:
    Away = pd.concat([Away,player_stat_standardization(Sunderland_2017)])
  elif trainset["AwayTeam"][i] == array_2017[15]:
    Away = pd.concat([Away,player_stat_standardization(Swanseacity_2017)])
  elif trainset["AwayTeam"][i] == array_2017[16]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2017)])
  elif trainset["AwayTeam"][i] == array_2017[17]:
    Away = pd.concat([Away,player_stat_standardization(Watford_2017)])
  elif trainset["AwayTeam"][i] == array_2017[18]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_2017)])
  elif trainset["AwayTeam"][i] == array_2017[19]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2017)])

array_2018 = ["Arsenal","Bournemouth","Brighton","Burnley","Chelsea","Crystal Palace","Everton","Huddersfield","Leicester","Liverpool","Man City","Man United","Newcastle","Southampton","Stoke","Swansea","Tottenham","Watford","West Brom","West Ham"]
for i in range(2660,3040):
  if trainset["HomeTeam"][i] == array_2018[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2018)])
  elif trainset["HomeTeam"][i] == array_2018[1]:
    Home = pd.concat([Home,player_stat_standardization(Bournemouth_2018)])
  elif trainset["HomeTeam"][i] == array_2018[2]:
    Home = pd.concat([Home,player_stat_standardization(Brighton_2018)])
  elif trainset["HomeTeam"][i] == array_2018[3]:
    Home = pd.concat([Home,player_stat_standardization(Burnley_2018)])
  elif trainset["HomeTeam"][i] == array_2018[4]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2018)])
  elif trainset["HomeTeam"][i] == array_2018[5]:
    Home = pd.concat([Home,player_stat_standardization(Crystalpalace_2018)])
  elif trainset["HomeTeam"][i] == array_2018[6]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2018)])
  elif trainset["HomeTeam"][i] == array_2018[7]:
    Home = pd.concat([Home,player_stat_standardization(Huddersfieldtown_2018)])
  elif trainset["HomeTeam"][i] == array_2018[8]:
    Home = pd.concat([Home,player_stat_standardization(LeicesterCity_2018)])
  elif trainset["HomeTeam"][i] == array_2018[9]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2018)])
  elif trainset["HomeTeam"][i] == array_2018[10]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2018)])
  elif trainset["HomeTeam"][i] == array_2018[11]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2018)])
  elif trainset["HomeTeam"][i] == array_2018[12]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2018)])
  elif trainset["HomeTeam"][i] == array_2018[13]:
    Home = pd.concat([Home,player_stat_standardization(Southhampton_2018)])
  elif trainset["HomeTeam"][i] == array_2018[14]:
    Home = pd.concat([Home,player_stat_standardization(Stokecity_2018)])
  elif trainset["HomeTeam"][i] == array_2018[15]:
    Home = pd.concat([Home,player_stat_standardization(Swanseacity_2018)])
  elif trainset["HomeTeam"][i] == array_2018[16]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2018)])
  elif trainset["HomeTeam"][i] == array_2018[17]:
    Home = pd.concat([Home,player_stat_standardization(Watford_2018)])
  elif trainset["HomeTeam"][i] == array_2018[18]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_2018)])
  elif trainset["HomeTeam"][i] == array_2018[19]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2018)])

  if trainset["AwayTeam"][i] == array_2018[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2018)])
  elif trainset["AwayTeam"][i] == array_2018[1]:
    Away = pd.concat([Away,player_stat_standardization(Bournemouth_2018)])
  elif trainset["AwayTeam"][i] == array_2018[2]:
    Away = pd.concat([Away,player_stat_standardization(Brighton_2018)])
  elif trainset["AwayTeam"][i] == array_2018[3]:
    Away = pd.concat([Away,player_stat_standardization(Burnley_2018)])
  elif trainset["AwayTeam"][i] == array_2018[4]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2018)])
  elif trainset["AwayTeam"][i] == array_2018[5]:
    Away = pd.concat([Away,player_stat_standardization(Crystalpalace_2018)])
  elif trainset["AwayTeam"][i] == array_2018[6]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2018)])
  elif trainset["AwayTeam"][i] == array_2018[7]:
    Away = pd.concat([Away,player_stat_standardization(Huddersfieldtown_2018)])
  elif trainset["AwayTeam"][i] == array_2018[8]:
    Away = pd.concat([Away,player_stat_standardization(LeicesterCity_2018)])
  elif trainset["AwayTeam"][i] == array_2018[9]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2018)])
  elif trainset["AwayTeam"][i] == array_2018[10]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2018)])
  elif trainset["AwayTeam"][i] == array_2018[11]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2018)])
  elif trainset["AwayTeam"][i] == array_2018[12]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2018)])
  elif trainset["AwayTeam"][i] == array_2018[13]:
    Away = pd.concat([Away,player_stat_standardization(Southhampton_2018)])
  elif trainset["AwayTeam"][i] == array_2018[14]:
    Away = pd.concat([Away,player_stat_standardization(Stokecity_2018)])
  elif trainset["AwayTeam"][i] == array_2018[15]:
    Away = pd.concat([Away,player_stat_standardization(Swanseacity_2018)])
  elif trainset["AwayTeam"][i] == array_2018[16]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2018)])
  elif trainset["AwayTeam"][i] == array_2018[17]:
    Away = pd.concat([Away,player_stat_standardization(Watford_2018)])
  elif trainset["AwayTeam"][i] == array_2018[18]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_2018)])
  elif trainset["AwayTeam"][i] == array_2018[19]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2018)])

array_2019 = ["Arsenal","Bournemouth","Brighton","Burnley","Cardiff","Chelsea","Crystal Palace","Everton","Fulham","Huddersfield","Leicester","Liverpool","Man City","Man United","Newcastle","Southampton","Tottenham","Watford","West Ham","Wolves"]
for i in range(3040,3420):
  if trainset["HomeTeam"][i] == array_2019[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2019)])
  elif trainset["HomeTeam"][i] == array_2019[1]:
    Home = pd.concat([Home,player_stat_standardization(Bournemouth_2019)])
  elif trainset["HomeTeam"][i] == array_2019[2]:
    Home = pd.concat([Home,player_stat_standardization(Brighton_2019)])
  elif trainset["HomeTeam"][i] == array_2019[3]:
    Home = pd.concat([Home,player_stat_standardization(Burnley_2019)])
  elif trainset["HomeTeam"][i] == array_2019[4]:
    Home = pd.concat([Home,player_stat_standardization(Cardifcity_2019)])
  elif trainset["HomeTeam"][i] == array_2019[5]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2019)])
  elif trainset["HomeTeam"][i] == array_2019[6]:
    Home = pd.concat([Home,player_stat_standardization(Crystalpalace_2019)])
  elif trainset["HomeTeam"][i] == array_2019[7]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2019)])
  elif trainset["HomeTeam"][i] == array_2019[8]:
    Home = pd.concat([Home,player_stat_standardization(Fulham_2019)])
  elif trainset["HomeTeam"][i] == array_2019[9]:
    Home = pd.concat([Home,player_stat_standardization(Huddersfieldtown_2019)])
  elif trainset["HomeTeam"][i] == array_2019[10]:
    Home = pd.concat([Home,player_stat_standardization(LeicesterCity_2019)])
  elif trainset["HomeTeam"][i] == array_2019[11]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2019)])
  elif trainset["HomeTeam"][i] == array_2019[12]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2019)])
  elif trainset["HomeTeam"][i] == array_2019[13]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2019)])
  elif trainset["HomeTeam"][i] == array_2019[14]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2019)])
  elif trainset["HomeTeam"][i] == array_2019[15]:
    Home = pd.concat([Home,player_stat_standardization(Southhampton_2019)])
  elif trainset["HomeTeam"][i] == array_2019[16]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2019)])
  elif trainset["HomeTeam"][i] == array_2019[17]:
    Home = pd.concat([Home,player_stat_standardization(Watford_2019)])
  elif trainset["HomeTeam"][i] == array_2019[18]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2019)])
  elif trainset["HomeTeam"][i] == array_2019[19]:
    Home = pd.concat([Home,player_stat_standardization(WolverhamptonWanderers_2019)])

  if trainset["AwayTeam"][i] == array_2019[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2019)])
  elif trainset["AwayTeam"][i] == array_2019[1]:
    Away = pd.concat([Away,player_stat_standardization(Bournemouth_2019)])
  elif trainset["AwayTeam"][i] == array_2019[2]:
    Away = pd.concat([Away,player_stat_standardization(Brighton_2019)])
  elif trainset["AwayTeam"][i] == array_2019[3]:
    Away = pd.concat([Away,player_stat_standardization(Burnley_2019)])
  elif trainset["AwayTeam"][i] == array_2019[4]:
    Away = pd.concat([Away,player_stat_standardization(Cardifcity_2019)])
  elif trainset["AwayTeam"][i] == array_2019[5]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2019)])
  elif trainset["AwayTeam"][i] == array_2019[6]:
    Away = pd.concat([Away,player_stat_standardization(Crystalpalace_2019)])
  elif trainset["AwayTeam"][i] == array_2019[7]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2019)])
  elif trainset["AwayTeam"][i] == array_2019[8]:
    Away = pd.concat([Away,player_stat_standardization(Fulham_2019)])
  elif trainset["AwayTeam"][i] == array_2019[9]:
    Away = pd.concat([Away,player_stat_standardization(Huddersfieldtown_2019)])
  elif trainset["AwayTeam"][i] == array_2019[10]:
    Away = pd.concat([Away,player_stat_standardization(LeicesterCity_2019)])
  elif trainset["AwayTeam"][i] == array_2019[11]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2019)])
  elif trainset["AwayTeam"][i] == array_2019[12]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2019)])
  elif trainset["AwayTeam"][i] == array_2019[13]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2019)])
  elif trainset["AwayTeam"][i] == array_2019[14]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2019)])
  elif trainset["AwayTeam"][i] == array_2019[15]:
    Away = pd.concat([Away,player_stat_standardization(Southhampton_2019)])
  elif trainset["AwayTeam"][i] == array_2019[16]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2019)])
  elif trainset["AwayTeam"][i] == array_2019[17]:
    Away = pd.concat([Away,player_stat_standardization(Watford_2019)])
  elif trainset["AwayTeam"][i] == array_2019[18]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2019)])
  elif trainset["AwayTeam"][i] == array_2019[19]:
    Away = pd.concat([Away,player_stat_standardization(WolverhamptonWanderers_2019)])

array_2020 = ["Arsenal","Aston Villa","Bournemouth","Brighton","Burnley","Chelsea","Crystal Palace","Everton","Leicester","Liverpool","Man City","Man United","Newcastle","Norwich","Sheffield United","Southampton","Tottenham","Watford","West Ham","Wolves"]
for i in range(3420,3800):
  if trainset["HomeTeam"][i] == array_2020[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2020)])
  elif trainset["HomeTeam"][i] == array_2020[1]:
    Home = pd.concat([Home,player_stat_standardization(AstonVilla_2020)])
  elif trainset["HomeTeam"][i] == array_2020[2]:
    Home = pd.concat([Home,player_stat_standardization(Bournemouth_2020)])
  elif trainset["HomeTeam"][i] == array_2020[3]:
    Home = pd.concat([Home,player_stat_standardization(Brighton_2020)])
  elif trainset["HomeTeam"][i] == array_2020[4]:
    Home = pd.concat([Home,player_stat_standardization(Burnley_2020)])
  elif trainset["HomeTeam"][i] == array_2020[5]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2020)])
  elif trainset["HomeTeam"][i] == array_2020[6]:
    Home = pd.concat([Home,player_stat_standardization(Crystalpalace_2020)])
  elif trainset["HomeTeam"][i] == array_2020[7]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2020)])
  elif trainset["HomeTeam"][i] == array_2020[8]:
    Home = pd.concat([Home,player_stat_standardization(LeicesterCity_2020)])
  elif trainset["HomeTeam"][i] == array_2020[9]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2020)])
  elif trainset["HomeTeam"][i] == array_2020[10]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2020)])
  elif trainset["HomeTeam"][i] == array_2020[11]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2020)])
  elif trainset["HomeTeam"][i] == array_2020[12]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2020)])
  elif trainset["HomeTeam"][i] == array_2020[13]:
    Home = pd.concat([Home,player_stat_standardization(Norich_2020)])
  elif trainset["HomeTeam"][i] == array_2020[14]:
    Home = pd.concat([Home,player_stat_standardization(Sheffieldunited_2020)])
  elif trainset["HomeTeam"][i] == array_2020[15]:
    Home = pd.concat([Home,player_stat_standardization(Southhampton_2020)])
  elif trainset["HomeTeam"][i] == array_2020[16]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2020)])
  elif trainset["HomeTeam"][i] == array_2020[17]:
    Home = pd.concat([Home,player_stat_standardization(Watford_2020)])
  elif trainset["HomeTeam"][i] == array_2020[18]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2020)])
  elif trainset["HomeTeam"][i] == array_2020[19]:
    Home = pd.concat([Home,player_stat_standardization(WolverhamptonWanderers_2020)])

  if trainset["AwayTeam"][i] == array_2020[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2020)])
  elif trainset["AwayTeam"][i] == array_2020[1]:
    Away = pd.concat([Away,player_stat_standardization(AstonVilla_2020)])
  elif trainset["AwayTeam"][i] == array_2020[2]:
    Away = pd.concat([Away,player_stat_standardization(Bournemouth_2020)])
  elif trainset["AwayTeam"][i] == array_2020[3]:
    Away = pd.concat([Away,player_stat_standardization(Brighton_2020)])
  elif trainset["AwayTeam"][i] == array_2020[4]:
    Away = pd.concat([Away,player_stat_standardization(Burnley_2020)])
  elif trainset["AwayTeam"][i] == array_2020[5]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2020)])
  elif trainset["AwayTeam"][i] == array_2020[6]:
    Away = pd.concat([Away,player_stat_standardization(Crystalpalace_2020)])
  elif trainset["AwayTeam"][i] == array_2020[7]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2020)])
  elif trainset["AwayTeam"][i] == array_2020[8]:
    Away = pd.concat([Away,player_stat_standardization(LeicesterCity_2020)])
  elif trainset["AwayTeam"][i] == array_2020[9]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2020)])
  elif trainset["AwayTeam"][i] == array_2020[10]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2020)])
  elif trainset["AwayTeam"][i] == array_2020[11]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2020)])
  elif trainset["AwayTeam"][i] == array_2020[12]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2020)])
  elif trainset["AwayTeam"][i] == array_2020[13]:
    Away = pd.concat([Away,player_stat_standardization(Norich_2020)])
  elif trainset["AwayTeam"][i] == array_2020[14]:
    Away = pd.concat([Away,player_stat_standardization(Sheffieldunited_2020)])
  elif trainset["AwayTeam"][i] == array_2020[15]:
    Away = pd.concat([Away,player_stat_standardization(Southhampton_2020)])
  elif trainset["AwayTeam"][i] == array_2020[16]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2020)])
  elif trainset["AwayTeam"][i] == array_2020[17]:
    Away = pd.concat([Away,player_stat_standardization(Watford_2020)])
  elif trainset["AwayTeam"][i] == array_2020[18]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2020)])
  elif trainset["AwayTeam"][i] == array_2020[19]:
    Away = pd.concat([Away,player_stat_standardization(WolverhamptonWanderers_2020)])

Home.index = range(3800)
Away.index = range(3800)
Home.columns = ['H_Att_RATING','H_Att_PACE','H_Att_SHOOTING','H_Att_PASSING','H_Att_DRIBBLING','H_Att_DEFENDING','H_Att_PHYSICAL','H_Mid_RATING','H_Mid_PACE','H_Mid_SHOOTING','H_Mid_PASSING','H_Mid_DRIBBLING','H_Mid_DEFENDING','H_Mid_PHYSICAL','H_Def_RATING','H_Def_PACE','H_Def_SHOOTING','H_Def_PASSING','H_Def_DRIBBLING','H_Def_DEFENDING','H_Def_PHYSICAL','H_Bench_RATING']
Away.columns = ['A_Att_RATING','A_Att_PACE','A_Att_SHOOTING','A_Att_PASSING','A_Att_DRIBBLING','A_Att_DEFENDING','A_Att_PHYSICAL','A_Mid_RATING','A_Mid_PACE','A_Mid_SHOOTING','A_Mid_PASSING','A_Mid_DRIBBLING','A_Mid_DEFENDING','A_Mid_PHYSICAL','A_Def_RATING','A_Def_PACE','A_Def_SHOOTING','A_Def_PASSING','A_Def_DRIBBLING','A_Def_DEFENDING','A_Def_PHYSICAL','A_Bench_RATING']
data = pd.concat([Home,Away],axis=1)
data

"""#Make Label"""

ㅁ  goal_label = pd.concat([trainset["FTHG"].copy(),trainset["FTAG"].copy()],axis=1)
label = pd.concat([trainset["HS"].copy(),trainset["AS"].copy(),trainset["HST"].copy(),trainset["AST"].copy(),trainset["HC"].copy(),trainset["AC"].copy()],axis=1)

"""#Model Training 1 (Predict number of Shooting, Coner kick etc.)"""

#To predict shootings, effective shooting etc (predict features except goal)
from sklearn.model_selection import train_test_split
train_input, test_input, train_label, test_label = train_test_split(data, label, test_size = 0.1, random_state =42)

from sklearn.preprocessing import StandardScaler
std_scaler = StandardScaler()
std_scaler.fit(train_input)
std_train_input=std_scaler.transform(train_input)

from sklearn.model_selection import cross_val_score
def get_cv_score_rgs(model,x,y):
  scores = cross_val_score(model,x,y,scoring='r2',cv=10)
  return sum(scores)/len(scores)

from sklearn.ensemble import RandomForestRegressor
rf = RandomForestRegressor()
rf.fit(std_train_input,train_label)
print(get_cv_score_rgs(rf,std_train_input,train_label))

from sklearn.linear_model import Lasso
las = Lasso(alpha=0.0001,max_iter=10000000)
las.fit(std_train_input,train_label)
print(get_cv_score_rgs(las,std_train_input,train_label))

from sklearn.model_selection import GridSearchCV
param_grid = [
                  {'n_estimators':[1000, 2000], 'max_features': [4, 8, 16]}
]

grid_search = GridSearchCV(rf, param_grid, cv=10,refit=False, scoring='r2',return_train_score=True)
grid_search.fit(std_train_input,train_label)

scores_reg = grid_search.cv_results_
for mean_score, params in zip(scores_reg["mean_test_score"],scores_reg["params"]):
  print(mean_score,params)

from sklearn.metrics import accuracy_score
std_scaler = StandardScaler()
std_scaler.fit(test_input)
std_test_input=std_scaler.transform(test_input)
model1 =RandomForestRegressor(n_estimators=2000,max_features=4)
model1.fit(std_train_input,train_label)
print(model1.score(std_test_input,test_label))

from sklearn.externals import joblib
joblib.dump(model1,"model1.pkl")

"""#Model Training2 (Predict number of Goals)"""

final_data = pd.concat([data,label],axis=1)

train_input2, test_input2, train_label2, test_label2 = train_test_split(final_data, goal_label, test_size = 0.1, random_state =42)

std_scaler = StandardScaler()
std_scaler.fit(train_input2)
std_train_input2 = std_scaler.transform(train_input2)

# Use Lasso regression to reduce features (too many features were existed)
from sklearn.linear_model import Lasso
las2 = Lasso(alpha=0.00001,max_iter=10000)
las2.fit(std_train_input2,train_label2)
print(get_cv_score_rgs(las2,std_train_input2,train_label2))



from sklearn.ensemble import RandomForestRegressor
rf2 = RandomForestRegressor()
rf2.fit(std_train_input2,train_label2)
print(get_cv_score_rgs(rf2,std_train_input2,train_label2))

final_las = Lasso()
param_grid2 = [
                  {'alpha':[0.001,0.0001, 0.00001], 'max_iter': [1000, 10000, 100000]}
]

grid_search2 = GridSearchCV(las2, param_grid2, cv=10,refit=False, scoring='r2',return_train_score=True)
grid_search2.fit(std_train_input2,train_label2)

scores2 = grid_search2.cv_results_
for mean_score, params in zip(scores2["mean_test_score"],scores2["params"]):
  print(mean_score,params)

from sklearn.metrics import accuracy_score
std_scaler = StandardScaler()
std_scaler.fit(test_input2)
std_test_input2=std_scaler.transform(test_input2)
model2 = Lasso(alpha=0.001,max_iter=1000)
model2.fit(std_train_input2,train_label2)
print(model2.score(std_test_input2,test_label2))

from sklearn.externals import joblib
joblib.dump(model2,"model2.pkl")

"""#Predict"""

import pandas as pd
import numpy as np
locate_2021 = "/Dataset/Player_dataset/2021/"

#2021
Arsenal_2021 = pd.read_excel(locate_2021+"Arsenal.xlsx")
AstonVilla_2021 = pd.read_excel(locate_2021+"AstonVilla.xlsx")
Brighton_2021 = pd.read_excel(locate_2021+"Brighton.xlsx")
Burnley_2021 = pd.read_excel(locate_2021+"Burnley.xlsx")
Chelsea_2021 = pd.read_excel(locate_2021+"Chelsea.xlsx")
CrystalPalace_2021 = pd.read_excel(locate_2021+"Crystal Palace.xlsx")
Everton_2021 = pd.read_excel(locate_2021+"Everton.xlsx")
Fulham_2021 = pd.read_excel(locate_2021+"Fulham.xlsx")
Leeds_2021 = pd.read_excel(locate_2021+"Leeds.xlsx")
Leicester_2021 = pd.read_excel(locate_2021+"Leicester.xlsx")
Liverpool_2021 = pd.read_excel(locate_2021+"Liverpool.xlsx")
Manchestercity_2021 = pd.read_excel(locate_2021+"Manchestercity.xlsx")
Manchesterunited_2021 = pd.read_excel(locate_2021+"Manchesterunited.xlsx")
Newcastle_2021 = pd.read_excel(locate_2021+"Newcastle.xlsx")
Sheffield_2021 = pd.read_excel(locate_2021+"Sheffield.xlsx")
Southampton_2021 = pd.read_excel(locate_2021+"Southampton.xlsx")
Tottenham_2021 = pd.read_excel(locate_2021+"Tottenham.xlsx")
WestBromwichAlbion_20211 = pd.read_excel(locate_2021+"West Brom.xlsx")
Westham_2021 = pd.read_excel(locate_2021+"West Ham.xlsx")
WolverhamptonWanderers_2021 = pd.read_excel(locate_2021+"Wolves.xlsx")

def player_stat_standardization(team):
  array=["RATING","PACE","SHOOTING","PASSING","DRIBBLING","DEFENDING","PHYSICAL"]
  
  is_Att = ((team["team_position"]=='ST')|(team["team_position"]=='LW')|(team["team_position"]=='RW')|(team["team_position"]=='CF')|(team["team_position"]=='LS')|(team["team_position"]=='RS')|(team["team_position"]=='LF')|(team["team_position"]=='RF'))
  Att = team[is_Att]
  avg_Att = Att[array].mean()
  
  is_Mid = ((team["team_position"]=='LM')|(team["team_position"]=='RM')|(team["team_position"]=='CM')|(team["team_position"]=='CAM')|(team["team_position"]=='LAM')|(team["team_position"]=='RAM')|(team["team_position"]=='LCM')|(team["team_position"]=='RCM')|(team["team_position"]=='LDM')|(team["team_position"]=='RDM')|(team["team_position"]=='CDM'))
  Mid = team[is_Mid]
  avg_Mid = Mid[array].mean()
  
  is_Def = ((team["team_position"]=='LWB')|(team["team_position"]=='RWB')|(team["team_position"]=='LB')|(team["team_position"]=='RB')|(team["team_position"]=='CB')|(team["team_position"]=='LCB')|(team["team_position"]=='RCB'))
  Def = team[is_Def]
  avg_Def = Mid[array].mean()
  
  is_Ben = (team["team_position"] == 'SUB')
  Ben = team[is_Ben]
  avg_Ben = Ben["RATING"].mean()
  
  result = pd.concat([avg_Att,avg_Mid,avg_Def],axis=0)
  result["Bench_RATING"]=avg_Ben
  result = pd.DataFrame(result)
  result.index = ['Att_RATING','Att_PACE','Att_SHOOTING','Att_PASSING','Att_DRIBBLING','Att_DEFENDING','Att_PHYSICAL','Mid_RATING','Mid_PACE','Mid_SHOOTING','Mid_PASSING','Mid_DRIBBLING','Mid_DEFENDING','Mid_PHYSICAL','Def_RATING','Def_PACE','Def_SHOOTING','Def_PASSING','Def_DRIBBLING','Def_DEFENDING','Def_PHYSICAL','Bench_RATING']
  return result.T

Schedule = pd.read_excel("/Dataset/schedule.xlsx")
Schedule

Home = pd.DataFrame({'Att_RATING':[],'Att_PACE':[],'Att_SHOOTING':[],'Att_PASSING':[],'Att_DRIBBLING':[],'Att_DEFENDING':[],'Att_PHYSICAL':[],'Mid_RATING':[],'Mid_PACE':[],'Mid_SHOOTING':[],'Mid_PASSING':[],'Mid_DRIBBLING':[],'Mid_DEFENDING':[],'Mid_PHYSICAL':[],'Def_RATING':[],'Def_PACE':[],'Def_SHOOTING':[],'Def_PASSING':[],'Def_DRIBBLING':[],'Def_DEFENDING':[],'Def_PHYSICAL':[],'Bench_RATING':[]})
Away = pd.DataFrame({'Att_RATING':[],'Att_PACE':[],'Att_SHOOTING':[],'Att_PASSING':[],'Att_DRIBBLING':[],'Att_DEFENDING':[],'Att_PHYSICAL':[],'Mid_RATING':[],'Mid_PACE':[],'Mid_SHOOTING':[],'Mid_PASSING':[],'Mid_DRIBBLING':[],'Mid_DEFENDING':[],'Mid_PHYSICAL':[],'Def_RATING':[],'Def_PACE':[],'Def_SHOOTING':[],'Def_PASSING':[],'Def_DRIBBLING':[],'Def_DEFENDING':[],'Def_PHYSICAL':[],'Bench_RATING':[]})

array_2021 = ["Arsenal","Aston Villa","Brighton","Burnley","Chelsea","Crystal Palace","Everton","Fulham","Leeds","Leicester","Liverpool","Man City","Man Utd","Newcastle", "Sheffield Utd","Southampton","Spurs","West Brom","West Ham","Wolves"]
for i in range(0,270):
  if Schedule["HomeTeam"][i] == array_2021[0]:
    Home = pd.concat([Home,player_stat_standardization(Arsenal_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[1]:
    Home = pd.concat([Home,player_stat_standardization(AstonVilla_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[2]:
    Home = pd.concat([Home,player_stat_standardization(Brighton_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[3]:
    Home = pd.concat([Home,player_stat_standardization(Burnley_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[4]:
    Home = pd.concat([Home,player_stat_standardization(Chelsea_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[5]:
    Home = pd.concat([Home,player_stat_standardization(CrystalPalace_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[6]:
    Home = pd.concat([Home,player_stat_standardization(Everton_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[7]:
    Home = pd.concat([Home,player_stat_standardization(Fulham_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[8]:
    Home = pd.concat([Home,player_stat_standardization(Leeds_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[9]:
    Home = pd.concat([Home,player_stat_standardization(Leicester_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[10]:
    Home = pd.concat([Home,player_stat_standardization(Liverpool_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[11]:
    Home = pd.concat([Home,player_stat_standardization(Manchestercity_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[12]:
    Home = pd.concat([Home,player_stat_standardization(Manchesterunited_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[13]:
    Home = pd.concat([Home,player_stat_standardization(Newcastle_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[14]:
    Home = pd.concat([Home,player_stat_standardization(Sheffield_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[15]:
    Home = pd.concat([Home,player_stat_standardization(Southampton_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[16]:
    Home = pd.concat([Home,player_stat_standardization(Tottenham_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[17]:
    Home = pd.concat([Home,player_stat_standardization(WestBromwichAlbion_20211)])
  elif Schedule["HomeTeam"][i] == array_2021[18]:
    Home = pd.concat([Home,player_stat_standardization(Westham_2021)])
  elif Schedule["HomeTeam"][i] == array_2021[19]:
    Home = pd.concat([Home,player_stat_standardization(WolverhamptonWanderers_2021)])

  if Schedule["AwayTeam"][i] == array_2021[0]:
    Away = pd.concat([Away,player_stat_standardization(Arsenal_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[1]:
    Away = pd.concat([Away,player_stat_standardization(AstonVilla_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[2]:
    Away = pd.concat([Away,player_stat_standardization(Brighton_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[3]:
    Away = pd.concat([Away,player_stat_standardization(Burnley_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[4]:
    Away = pd.concat([Away,player_stat_standardization(Chelsea_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[5]:
    Away = pd.concat([Away,player_stat_standardization(CrystalPalace_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[6]:
    Away = pd.concat([Away,player_stat_standardization(Everton_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[7]:
    Away = pd.concat([Away,player_stat_standardization(Fulham_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[8]:
    Away = pd.concat([Away,player_stat_standardization(Leeds_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[9]:
    Away = pd.concat([Away,player_stat_standardization(Leicester_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[10]:
    Away = pd.concat([Away,player_stat_standardization(Liverpool_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[11]:
    Away = pd.concat([Away,player_stat_standardization(Manchestercity_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[12]:
    Away = pd.concat([Away,player_stat_standardization(Manchesterunited_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[13]:
    Away = pd.concat([Away,player_stat_standardization(Newcastle_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[14]:
    Away = pd.concat([Away,player_stat_standardization(Sheffield_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[15]:
    Away = pd.concat([Away,player_stat_standardization(Southampton_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[16]:
    Away = pd.concat([Away,player_stat_standardization(Tottenham_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[17]:
    Away = pd.concat([Away,player_stat_standardization(WestBromwichAlbion_20211)])
  elif Schedule["AwayTeam"][i] == array_2021[18]:
    Away = pd.concat([Away,player_stat_standardization(Westham_2021)])
  elif Schedule["AwayTeam"][i] == array_2021[19]:
    Away = pd.concat([Away,player_stat_standardization(WolverhamptonWanderers_2021)])

Home.index = range(270)
Away.index = range(270)
Home.columns = ['H_Att_RATING','H_Att_PACE','H_Att_SHOOTING','H_Att_PASSING','H_Att_DRIBBLING','H_Att_DEFENDING','H_Att_PHYSICAL','H_Mid_RATING','H_Mid_PACE','H_Mid_SHOOTING','H_Mid_PASSING','H_Mid_DRIBBLING','H_Mid_DEFENDING','H_Mid_PHYSICAL','H_Def_RATING','H_Def_PACE','H_Def_SHOOTING','H_Def_PASSING','H_Def_DRIBBLING','H_Def_DEFENDING','H_Def_PHYSICAL','H_Bench_RATING']
Away.columns = ['A_Att_RATING','A_Att_PACE','A_Att_SHOOTING','A_Att_PASSING','A_Att_DRIBBLING','A_Att_DEFENDING','A_Att_PHYSICAL','A_Mid_RATING','A_Mid_PACE','A_Mid_SHOOTING','A_Mid_PASSING','A_Mid_DRIBBLING','A_Mid_DEFENDING','A_Mid_PHYSICAL','A_Def_RATING','A_Def_PACE','A_Def_SHOOTING','A_Def_PASSING','A_Def_DRIBBLING','A_Def_DEFENDING','A_Def_PHYSICAL','A_Bench_RATING']
data = pd.concat([Home,Away],axis=1)
data

model1_path="model1.pkl"
model2_path="model2.pkl"

from sklearn.externals import joblib
model1 = joblib.load(model1_path)
model2 = joblib.load(model2_path)

from sklearn.preprocessing import StandardScaler
std_scaler = StandardScaler()
std_scaler.fit(data)
data=std_scaler.transform(data)
temp = model1.predict(data)
temp = np.around(temp)

final_data = np.concatenate([data,temp],axis=1)
std_scaler = StandardScaler()
std_scaler.fit(final_data)
final_data=std_scaler.transform(final_data)
pred_goal = model2.predict(final_data)
pred_goal = np.around(pred_goal)

pred_goal.T[0]

Game_result = pd.DataFrame({'Home':Schedule["HomeTeam"],'Away':Schedule["AwayTeam"],'H_goal':pred_goal.T[0],'A_goal':pred_goal.T[1]})
Game_result

result = [0,0,0,0]
temp_ = [0,0,0,0]
for i in range(270):
  if Game_result['H_goal'][i] > Game_result['A_goal'][i]:
    #print(Game_result['H_goal'][i],Game_result['A_goal'][i])
    temp_[0]=3
    temp_[1]=0
    temp_[2]=Game_result['H_goal'][i]-Game_result['A_goal'][i]
    temp_[3]=Game_result['A_goal'][i]-Game_result['H_goal'][i]
  elif Game_result['H_goal'][i] == Game_result['A_goal'][i]:
    temp_[0]=1
    temp_[1]=1
    temp_[2]= 0
    temp_[3]= 0
  elif Game_result['H_goal'][i] < Game_result['A_goal'][i]:
    temp_[0]=0
    temp_[1]=3
    temp_[2]=Game_result['H_goal'][i]-Game_result['A_goal'][i]
    temp_[3]=Game_result['A_goal'][i]-Game_result['H_goal'][i]
  result = np.vstack((result,temp_))

win = pd.DataFrame(result)
win = win.drop(0)
win.index=range(270)
win.columns = ['Home point','Away point','Home GD','Away GD']
final = pd.concat([Schedule,win],axis=1)

Arsenal = ['Arsenal',13,-4]
Aston_Villa = ['Aston Villa', 15,7]
Brighton = ['Brighton',10,-3]
Burnley = ['Burnley',6,-13]
Chelsea = ['Chelsea',22,14]
Crystal_Palace = ['Crystal Palace',16,1]
Everton=['Everton',17,2]
Fulham = ['Fulham',7,-10]
Leeds = ['Leeds',14,-4]
Leicester = ['Leicester City',21,6]
Liverpool = ['Liverpool',24,9]
Manchestercity = ['Manchester City',18,6]
Manchesterutd = ['Manchester United',19,2]
Newcastle = ['Newcastle',14,-3]
Sheffield = ['Sheffield',1,-13]
Southampton = ['Southampton',20,4]
Tottenham = ['Tottenham',24,14]
West_Brom = ['West Brom',6,-15]
West_Ham = ['West Ham',17,4]
Wolves = ['Wolverhampton',17,-4]

for i in range(270):
  if final["HomeTeam"][i] == 'Arsenal':
    Arsenal[1] = Arsenal[1] + final["Home point"][i]
    Arsenal[2] = Arsenal[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'Aston Villa':
    Aston_Villa[1] = Aston_Villa[1] + final["Home point"][i]
    Aston_Villa[2] = Aston_Villa[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'Brighton':
    Brighton[1] = Brighton[1] + final["Home point"][i]
    Brighton[2] = Brighton[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'Burnley':
    Burnley[1] = Burnley[1] + final["Home point"][i]
    Burnley[2] = Burnley[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'Chelsea':
    Chelsea[1] = Chelsea[1] + final["Home point"][i]
    Chelsea[2] = Chelsea[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'Crystal Palace':
    Crystal_Palace[1] = Crystal_Palace[1] + final["Home point"][i]
    Crystal_Palace[2] = Crystal_Palace[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'Everton':
    Everton[1] = Everton[1] + final["Home point"][i]
    Everton[2] = Everton[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Fulham':
    Fulham[1] = Fulham[1] + final["Home point"][i]
    Fulham[2] = Fulham[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Leeds':
    Leeds[1] = Leeds[1] + final["Home point"][i]
    Leeds[2] = Leeds[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Leicester':
    Leicester[1] = Leicester[1] + final["Home point"][i]
    Leicester[2] = Leicester[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Liverpool':
    Liverpool[1] = Liverpool[1] + final["Home point"][i]
    Liverpool[2] = Liverpool[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Man City':
    Manchestercity[1] = Manchestercity[1] + final["Home point"][i]
    Manchestercity[2] = Manchestercity[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Man Utd':
    Manchesterutd[1] = Manchesterutd[1] + final["Home point"][i]
    Manchesterutd[2] = Manchesterutd[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Newcastle':
    Newcastle[1] = Newcastle[1] + final["Home point"][i]
    Newcastle[2] = Newcastle[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Sheffield Utd':
    Sheffield[1] = Sheffield[1] + final["Home point"][i]
    Sheffield[2] = Sheffield[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Southampton':
    Southampton[1] = Southampton[1] + final["Home point"][i]
    Southampton[2] = Southampton[2] + final["Home GD"][i] 
  if final["HomeTeam"][i] == 'Spurs':
    Tottenham[1] = Tottenham[1] + final["Home point"][i]
    Tottenham[2] = Tottenham[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'West Brom':
    West_Brom[1] = West_Brom[1] + final["Home point"][i]
    West_Brom[2] = West_Brom[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'West Ham':
    West_Ham[1] = West_Ham[1] + final["Home point"][i]
    West_Ham[2] = West_Ham[2] + final["Home GD"][i]
  if final["HomeTeam"][i] == 'Wolves':
    Wolves[1] = Wolves[1] + final["Home point"][i]
    Wolves[2] = Wolves[2] + final["Home GD"][i]
  if final["AwayTeam"][i] == 'Arsenal':
    Arsenal[1] = Arsenal[1] + final["Away point"][i]
    Arsenal[2] = Arsenal[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'Aston Villa':
    Aston_Villa[1] = Aston_Villa[1] + final["Away point"][i]
    Aston_Villa[2] = Aston_Villa[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'Brighton':
    Brighton[1] = Brighton[1] + final["Away point"][i]
    Brighton[2] = Brighton[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'Burnley':
    Burnley[1] = Burnley[1] + final["Away point"][i]
    Burnley[2] = Burnley[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'Chelsea':
    Chelsea[1] = Chelsea[1] + final["Away point"][i]
    Chelsea[2] = Chelsea[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'Crystal Palace':
    Crystal_Palace[1] = Crystal_Palace[1] + final["Away point"][i]
    Crystal_Palace[2] = Crystal_Palace[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'Everton':
    Everton[1] = Everton[1] + final["Away point"][i]
    Everton[2] = Everton[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Fulham':
    Fulham[1] = Fulham[1] + final["Away point"][i]
    Fulham[2] = Fulham[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Leeds':
    Leeds[1] = Leeds[1] + final["Away point"][i]
    Leeds[2] = Leeds[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Leicester':
    Leicester[1] = Leicester[1] + final["Away point"][i]
    Leicester[2] = Leicester[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Liverpool':
    Liverpool[1] = Liverpool[1] + final["Away point"][i]
    Liverpool[2] = Liverpool[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Man City':
    Manchestercity[1] = Manchestercity[1] + final["Away point"][i]
    Manchestercity[2] = Manchestercity[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Man Utd':
    Manchesterutd[1] = Manchesterutd[1] + final["Away point"][i]
    Manchesterutd[2] = Manchesterutd[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Newcastle':
    Newcastle[1] = Newcastle[1] + final["Away point"][i]
    Newcastle[2] = Newcastle[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Sheffield Utd':
    Sheffield[1] = Sheffield[1] + final["Away point"][i]
    Sheffield[2] = Sheffield[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Southampton':
    Southampton[1] = Southampton[1] + final["Away point"][i]
    Southampton[2] = Southampton[2] + final["Away GD"][i] 
  if final["AwayTeam"][i] == 'Spurs':
    Tottenham[1] = Tottenham[1] + final["Away point"][i]
    Tottenham[2] = Tottenham[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'West Brom':
    West_Brom[1] = West_Brom[1] + final["Away point"][i]
    West_Brom[2] = West_Brom[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'West Ham':
    West_Ham[1] = West_Ham[1] + final["Away point"][i]
    West_Ham[2] = West_Ham[2] + final["Away GD"][i]
  if final["AwayTeam"][i] == 'Wolves':
    Wolves[1] = Wolves[1] + final["Away point"][i]
    Wolves[2] = Wolves[2] + final["Away GD"][i]

table = np.vstack([Arsenal,Aston_Villa,Brighton,Burnley,Chelsea,Crystal_Palace,Everton,Fulham,Leeds,Leicester,Liverpool,Manchestercity,Manchesterutd,Newcastle,Sheffield,Southampton,Tottenham,West_Brom,West_Ham,Wolves])

PremierLeagueTable = pd.DataFrame(table)
PremierLeagueTable.columns = ["Team name", "Points","GD"]
PremierLeagueTable = PremierLeagueTable.astype({'Points':'float'},{'GD':'float'})

FINAL_TABLE = PremierLeagueTable.sort_values(by=['Points','GD'],ascending=False)
FINAL_TABLE.index = range(1,21)
FINAL_TABLE